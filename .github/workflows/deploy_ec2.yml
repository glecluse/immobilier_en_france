name: Déploiement EC2

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v2

      - name: Configuration de Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Installation des dépendances
        run: pip install -r requirements.txt

      - name: Exécution des tests unitaires
        run: python -m unittest discover -s test_login

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout du code
        uses: actions/checkout@v2

      - name: Configuration des clés SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/ec2_private_key.pem
          chmod 400 ~/.ssh/ec2_private_key.pem
          cat ~/.ssh/ec2_private_key.pem  # Ajoutez cette ligne pour vérifier si la clé est correctement écrite

      - name: Vérification et création du dossier sur EC2
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ~/.ssh/ec2_private_key.pem # Utilisation du fichier de clé SSH
          script: |
            mkdir -p ~/immobilier_en_france/

      - name: Copie des fichiers vers EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ~/.ssh/ec2_private_key.pem # Utilisation du fichier de clé SSH
          source: ./*
          target: ~/immobilier_en_france/

      - name: Redémarrage de l'application sur EC2
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ~/.ssh/ec2_private_key.pem # Utilisation du fichier de clé SSH
          script: |
            cd ~/immobilier_en_france/
            if pgrep -f "streamlit run main.py"; then
              pkill -f "streamlit run main.py"
              sleep 3
            fi
            if [ -d "venv" ]; then
              source venv/bin/activate
              pip install --upgrade -r requirements.txt
              nohup streamlit run main.py --server.port 8501 > output.log 2>&1 &
              deactivate
            else
              echo "Erreur : Le virtualenv venv n'existe pas."
              exit 1
            fi
