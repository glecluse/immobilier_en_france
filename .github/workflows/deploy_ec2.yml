name: Déploiement EC2

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v2

      - name: Configuration de Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Installation des dépendances
        run: pip install -r requirements.txt

      - name: Exécution des tests unitaires
        run: python -m unittest discover -s test_login

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout du code
        uses: actions/checkout@v2

      - name: Configuration des clés SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/ec2_private_key.pem
          chmod 600 ~/.ssh/ec2_private_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Création du dossier sur EC2 + suppression conditionnelle de project.db
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2_private_key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            if [ -d ~/immobilier_en_france ]; then
              echo "Le dossier existe déjà."
              if [ -f ~/immobilier_en_france/project.db ]; then
                echo "Le fichier project.db existe, suppression..."
                rm -f ~/immobilier_en_france/project.db
              else
                echo "Le fichier project.db n'existe pas, rien à supprimer."
              fi
            else
              echo "Le dossier n'existe pas. Création du dossier..."
              mkdir ~/immobilier_en_france
            fi
          EOF
        
        
        
      - name: Préparation des fichiers pour la copie
        run: |
          mkdir -p deploy_files
          cp -r * deploy_files/ 2>/dev/null || true
        
      - name: Copie des fichiers vers EC2
        run: |
          scp -r -o StrictHostKeyChecking=no -i ~/.ssh/ec2_private_key.pem deploy_files/* ubuntu@${{ secrets.EC2_HOST }}:~/immobilier_en_france/
        
          

      - name: Vérification de l'environnement virtuel
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2_private_key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          cd ~/immobilier_en_france/
          if [ ! -d "venv" ]; then
          echo "Création de l'environnement virtuel..."
          python3 -m venv venv
          fi
          EOF

      - name: Arrêt de l'application en cours
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2_private_key.pem ubuntu@${{ secrets.EC2_HOST }} "cd ~/immobilier_en_france/ && \
          if pgrep -f 'streamlit run main.py'; then \
            echo 'Arrêt de l'application en cours...' && \
            pkill -f 'streamlit run main.py' && \
            sleep 3; \
          else \
            echo 'Aucune instance Streamlit en cours d'exécution.'; \
          fi"

      - name: Installation des dépendances sur EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2_private_key.pem ubuntu@${{ secrets.EC2_HOST }} "cd ~/immobilier_en_france/ && \
          source venv/bin/activate && \
          pip install --upgrade pip && \
          pip install -r requirements.txt && \
          deactivate"

      - name: Lancement de l'application
        run: |
          echo "Démarrage de Streamlit en arrière-plan..."
          nohup venv/bin/python -m streamlit run main.py --server.port 8501 --server.enableCORS false > output.log 2>&1 &
          echo "Application Streamlit relancée."
        
